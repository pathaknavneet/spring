{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red26\green27\blue29;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt \clshdrawnil \clwWidth13200\clftsWidth3 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl380\sa300

\f0\b\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 PROPAGATION_REQUIRED = 0
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ; If DataSourceTransactionObject T1 is already started for Method M1.If for another Method M2 Transaction object is required ,no new Transaction object is created .Same object T1 is used for M2\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 PROPAGATION_MANDATORY = 2
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ; method must run within a transaction. If no existing transaction is in progress, an exception will be thrown\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 PROPAGATION_REQUIRES_NEW = 3
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ; If DataSourceTransactionObject T1 is already started for Method M1 and it is in progress(executing method M1) .If another method M2 start executing then T1 is suspended for the duration of method M2 with new DataSourceTransactionObject T2 for M2.M2 run within its own transaction context\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 PROPAGATION_NOT_SUPPORTED = 4
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ; If DataSourceTransactionObject T1 is already started for Method M1.If another method M2 is run concurrently .Then M2 should not run within transaction context. T1 is suspended till M2 is finished.\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 PROPAGATION_NEVER = 5
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ; None of the methods run in transaction context.\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 An isolation level:
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  It is about how much a transaction may be impacted by the activities of other concurrent transactions.It a supports consistency leaving the data across many tables in a consistent state. It involves locking rows and/or tables in a database.\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The problem with multiple transaction
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Scenario 1
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .If T1 transaction reads data from table A1 that was written by another concurrent transaction T2.If on the way T2 is rollback,the data obtained by T1 is invalid one.E.g a=2 is original data .If T1 read a=1 that was written by T2.If T2 rollback then a=1 will be rollback to a=2 in DB.But,Now ,T1 has a=1 but in DB table it is changed to a=2.\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Scenario2
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .If T1 transaction reads data from table A1.If another concurrent transaction(T2) update data on table A1.Then the data that T1 has read is different from table A1.Because T2 has updated the data on table A1.E.g if T1 read a=1 and T2 updated a=2.Then a!=b.\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Scenario 3
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .If T1 transaction reads data from table A1 with certain number of rows. If another concurrent transaction(T2) inserts more rows on table A1.The number of rows read by T1 is different from rows on table A1\
Scenario 1 is called 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Dirty reads
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
Scenario 2 is called 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Nonrepeatable reads
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
Scenario 3 is called 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Phantom reads .
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
So,isolation level is the extend to which 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Scenario 1 ,Scenario 2 ,Scenario 3
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  can be prevented. You can obtained complete isolation level by implementing locking.That is preventing concurrent reads and writes to the same data from occurring.But it affects performance .The level of isolation depends upon application to application how much isolation is required.\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ISOLATION_READ_UNCOMMITTED
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  :Allows to read changes that haven\'92t yet been committed.It suffer from Scenario 1 ,Scenario 2 ,Scenario 3\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ISOLATION_READ_COMMITTED
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 :Allows reads from concurrent transactions that have been com- mitted.It may suffer from Scenario 2 ,Scenario 3 . Because other transactions may be updating the data.\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ISOLATION_REPEATABLE_READ
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 :Multiple reads of the same field will yield the same results untill it is changed by itself.It may suffer from Scenario 3.Because other transactions may be inserting the data\

\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ISOLATION_SERIALIZABLE
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 : Scenario 1,Scenario 2,Scenario 3 never happens.It is complete isolation.It involves full locking.It affets performace because of locking.\cell \lastrow\row
}